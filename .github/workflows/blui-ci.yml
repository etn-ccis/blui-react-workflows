name: CI Run

on:
  push:
    branches: [ "dev", "master" ]
  pull_request:
    branches: [ "dev", "master" ]
  pull_request_target:
    types:
      - opened
    branches:
      - '*/*'

permissions:
  pull-requests: write
  contents: read

jobs:
  prettier_lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - run: yarn install:dependencies
    - run: yarn prettier
      working-directory: login-workflow
    - run: yarn lint
      working-directory: login-workflow

  # unit_test:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x]

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #   - run: yarn --frozen-lockfile
  #     working-directory: login-workflow
  #   - run: yarn test:ci --coverage --watchAll=false
  #     working-directory: login-workflow
  #   - name: Upload to Codecov
  #     uses: codecov/codecov-action@v3
  #     with:
  #       directory: ./coverage/
  #       files: clover.xml
  #       flags: unittests
  #       name: codecov-report
  #       verbose: true

  # build:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x]

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'yarn'
  #   - run: yarn --frozen-lockfile
  #     working-directory: login-workflow
  #   - run: yarn build
  #     working-directory: login-workflow
  #   - name: Save build
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: dist
  #       if-no-files-found: error
  #       path: dist